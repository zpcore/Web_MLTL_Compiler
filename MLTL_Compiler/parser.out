Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression AND expression
Rule 2     expression -> NEG expression
Rule 3     expression -> NEXT expression
Rule 4     expression -> expression OR expression
Rule 5     expression -> GLOBAL LBRACK NUMBER RBRACK expression
Rule 6     expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
Rule 7     expression -> expression UNTIL LBRACK NUMBER RBRACK expression
Rule 8     expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
Rule 9     expression -> LPAREN expression RPAREN
Rule 10    expression -> ATOMIC

Terminals, with rules where they appear

AND                  : 1
ATOMIC               : 10
COMMA                : 6 8
GLOBAL               : 5 6
LBRACK               : 5 6 7 8
LPAREN               : 9
NEG                  : 2
NEXT                 : 3
NUMBER               : 5 6 6 7 8 8
OR                   : 4
RBRACK               : 5 6 7 8
RPAREN               : 9
UNTIL                : 7 8
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 3 4 4 5 6 7 7 8 8 9 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             shift and go to state 7
    OR              shift and go to state 8
    UNTIL           shift and go to state 9


state 2

    (2) expression -> NEG . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 10

state 3

    (3) expression -> NEXT . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 11

state 4

    (5) expression -> GLOBAL . LBRACK NUMBER RBRACK expression
    (6) expression -> GLOBAL . LBRACK NUMBER COMMA NUMBER RBRACK expression

    LBRACK          shift and go to state 12


state 5

    (9) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 13

state 6

    (10) expression -> ATOMIC .

    AND             reduce using rule 10 (expression -> ATOMIC .)
    OR              reduce using rule 10 (expression -> ATOMIC .)
    UNTIL           reduce using rule 10 (expression -> ATOMIC .)
    $end            reduce using rule 10 (expression -> ATOMIC .)
    RPAREN          reduce using rule 10 (expression -> ATOMIC .)


state 7

    (1) expression -> expression AND . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 14

state 8

    (4) expression -> expression OR . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 15

state 9

    (7) expression -> expression UNTIL . LBRACK NUMBER RBRACK expression
    (8) expression -> expression UNTIL . LBRACK NUMBER COMMA NUMBER RBRACK expression

    LBRACK          shift and go to state 16


state 10

    (2) expression -> NEG expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             reduce using rule 2 (expression -> NEG expression .)
    OR              reduce using rule 2 (expression -> NEG expression .)
    UNTIL           reduce using rule 2 (expression -> NEG expression .)
    $end            reduce using rule 2 (expression -> NEG expression .)
    RPAREN          reduce using rule 2 (expression -> NEG expression .)

  ! AND             [ shift and go to state 7 ]
  ! OR              [ shift and go to state 8 ]
  ! UNTIL           [ shift and go to state 9 ]


state 11

    (3) expression -> NEXT expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 3 (expression -> NEXT expression .)
    RPAREN          reduce using rule 3 (expression -> NEXT expression .)
    AND             shift and go to state 7
    OR              shift and go to state 8
    UNTIL           shift and go to state 9

  ! AND             [ reduce using rule 3 (expression -> NEXT expression .) ]
  ! OR              [ reduce using rule 3 (expression -> NEXT expression .) ]
  ! UNTIL           [ reduce using rule 3 (expression -> NEXT expression .) ]


state 12

    (5) expression -> GLOBAL LBRACK . NUMBER RBRACK expression
    (6) expression -> GLOBAL LBRACK . NUMBER COMMA NUMBER RBRACK expression

    NUMBER          shift and go to state 17


state 13

    (9) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    RPAREN          shift and go to state 18
    AND             shift and go to state 7
    OR              shift and go to state 8
    UNTIL           shift and go to state 9


state 14

    (1) expression -> expression AND expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             reduce using rule 1 (expression -> expression AND expression .)
    OR              reduce using rule 1 (expression -> expression AND expression .)
    $end            reduce using rule 1 (expression -> expression AND expression .)
    RPAREN          reduce using rule 1 (expression -> expression AND expression .)
    UNTIL           shift and go to state 9

  ! UNTIL           [ reduce using rule 1 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 7 ]
  ! OR              [ shift and go to state 8 ]


state 15

    (4) expression -> expression OR expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    $end            reduce using rule 4 (expression -> expression OR expression .)
    RPAREN          reduce using rule 4 (expression -> expression OR expression .)
    AND             shift and go to state 7
    OR              shift and go to state 8
    UNTIL           shift and go to state 9

  ! AND             [ reduce using rule 4 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 4 (expression -> expression OR expression .) ]
  ! UNTIL           [ reduce using rule 4 (expression -> expression OR expression .) ]


state 16

    (7) expression -> expression UNTIL LBRACK . NUMBER RBRACK expression
    (8) expression -> expression UNTIL LBRACK . NUMBER COMMA NUMBER RBRACK expression

    NUMBER          shift and go to state 19


state 17

    (5) expression -> GLOBAL LBRACK NUMBER . RBRACK expression
    (6) expression -> GLOBAL LBRACK NUMBER . COMMA NUMBER RBRACK expression

    RBRACK          shift and go to state 20
    COMMA           shift and go to state 21


state 18

    (9) expression -> LPAREN expression RPAREN .

    AND             reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    UNTIL           reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 9 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (expression -> LPAREN expression RPAREN .)


state 19

    (7) expression -> expression UNTIL LBRACK NUMBER . RBRACK expression
    (8) expression -> expression UNTIL LBRACK NUMBER . COMMA NUMBER RBRACK expression

    RBRACK          shift and go to state 22
    COMMA           shift and go to state 23


state 20

    (5) expression -> GLOBAL LBRACK NUMBER RBRACK . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 24

state 21

    (6) expression -> GLOBAL LBRACK NUMBER COMMA . NUMBER RBRACK expression

    NUMBER          shift and go to state 25


state 22

    (7) expression -> expression UNTIL LBRACK NUMBER RBRACK . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 26

state 23

    (8) expression -> expression UNTIL LBRACK NUMBER COMMA . NUMBER RBRACK expression

    NUMBER          shift and go to state 27


state 24

    (5) expression -> GLOBAL LBRACK NUMBER RBRACK expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             reduce using rule 5 (expression -> GLOBAL LBRACK NUMBER RBRACK expression .)
    OR              reduce using rule 5 (expression -> GLOBAL LBRACK NUMBER RBRACK expression .)
    UNTIL           reduce using rule 5 (expression -> GLOBAL LBRACK NUMBER RBRACK expression .)
    $end            reduce using rule 5 (expression -> GLOBAL LBRACK NUMBER RBRACK expression .)
    RPAREN          reduce using rule 5 (expression -> GLOBAL LBRACK NUMBER RBRACK expression .)

  ! AND             [ shift and go to state 7 ]
  ! OR              [ shift and go to state 8 ]
  ! UNTIL           [ shift and go to state 9 ]


state 25

    (6) expression -> GLOBAL LBRACK NUMBER COMMA NUMBER . RBRACK expression

    RBRACK          shift and go to state 28


state 26

    (7) expression -> expression UNTIL LBRACK NUMBER RBRACK expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             reduce using rule 7 (expression -> expression UNTIL LBRACK NUMBER RBRACK expression .)
    OR              reduce using rule 7 (expression -> expression UNTIL LBRACK NUMBER RBRACK expression .)
    UNTIL           reduce using rule 7 (expression -> expression UNTIL LBRACK NUMBER RBRACK expression .)
    $end            reduce using rule 7 (expression -> expression UNTIL LBRACK NUMBER RBRACK expression .)
    RPAREN          reduce using rule 7 (expression -> expression UNTIL LBRACK NUMBER RBRACK expression .)

  ! AND             [ shift and go to state 7 ]
  ! OR              [ shift and go to state 8 ]
  ! UNTIL           [ shift and go to state 9 ]


state 27

    (8) expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER . RBRACK expression

    RBRACK          shift and go to state 29


state 28

    (6) expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 30

state 29

    (8) expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK . expression
    (1) expression -> . expression AND expression
    (2) expression -> . NEG expression
    (3) expression -> . NEXT expression
    (4) expression -> . expression OR expression
    (5) expression -> . GLOBAL LBRACK NUMBER RBRACK expression
    (6) expression -> . GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (7) expression -> . expression UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> . expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression
    (9) expression -> . LPAREN expression RPAREN
    (10) expression -> . ATOMIC

    NEG             shift and go to state 2
    NEXT            shift and go to state 3
    GLOBAL          shift and go to state 4
    LPAREN          shift and go to state 5
    ATOMIC          shift and go to state 6

    expression                     shift and go to state 31

state 30

    (6) expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             reduce using rule 6 (expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    OR              reduce using rule 6 (expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    UNTIL           reduce using rule 6 (expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    $end            reduce using rule 6 (expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    RPAREN          reduce using rule 6 (expression -> GLOBAL LBRACK NUMBER COMMA NUMBER RBRACK expression .)

  ! AND             [ shift and go to state 7 ]
  ! OR              [ shift and go to state 8 ]
  ! UNTIL           [ shift and go to state 9 ]


state 31

    (8) expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression .
    (1) expression -> expression . AND expression
    (4) expression -> expression . OR expression
    (7) expression -> expression . UNTIL LBRACK NUMBER RBRACK expression
    (8) expression -> expression . UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression

    AND             reduce using rule 8 (expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    OR              reduce using rule 8 (expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    UNTIL           reduce using rule 8 (expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    $end            reduce using rule 8 (expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression .)
    RPAREN          reduce using rule 8 (expression -> expression UNTIL LBRACK NUMBER COMMA NUMBER RBRACK expression .)

  ! AND             [ shift and go to state 7 ]
  ! OR              [ shift and go to state 8 ]
  ! UNTIL           [ shift and go to state 9 ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 11 resolved as shift
WARNING: shift/reduce conflict for OR in state 11 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 11 resolved as shift
WARNING: shift/reduce conflict for AND in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 15 resolved as shift
